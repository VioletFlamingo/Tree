
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '77F3E5EB0CE6A06D0E1214FE22FE12A8'
    
_lr_action_items = {'RETURN':([0,2,4,5,6,7,9,10,13,17,18,21,22,23,25,26,28,31,33,34,36,38,53,55,57,58,59,60,76,80,84,88,90,99,128,129,131,132,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-74,12,-2,-5,-73,-16,-18,-19,-21,-17,12,-15,-14,-22,12,-20,-12,-13,-3,12,12,-11,-37,-36,12,-23,-4,-35,-24,-25,-26,12,12,12,12,-27,-38,-28,-30,-32,-33,-34,-75,12,12,-29,-31,]),'WHILE':([0,2,4,5,6,7,9,10,13,17,18,21,22,23,25,26,28,31,33,34,36,38,53,55,57,58,59,60,76,80,84,88,90,99,128,129,131,132,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-74,16,-2,-5,-73,-16,-18,-19,-21,-17,16,-15,-14,-22,16,-20,-12,-13,-3,16,16,-11,-37,-36,16,-23,-4,-35,-24,-25,-26,16,16,16,16,-27,-38,-28,-30,-32,-33,-34,-75,16,16,-29,-31,]),'PRINT':([0,2,4,5,6,7,9,10,13,17,18,21,22,23,25,26,28,31,33,34,36,38,53,55,57,58,59,60,76,80,84,88,90,99,128,129,131,132,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-74,15,-2,-5,-73,-16,-18,-19,-21,-17,15,-15,-14,-22,15,-20,-12,-13,-3,15,15,-11,-37,-36,15,-23,-4,-35,-24,-25,-26,15,15,15,15,-27,-38,-28,-30,-32,-33,-34,-75,15,15,-29,-31,]),'NEQ':([19,24,29,30,32,39,44,45,49,52,87,93,94,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,127,130,134,135,],[-44,-42,-40,-45,-41,77,-45,77,77,77,77,-66,-46,77,77,-58,None,-51,77,None,-57,-47,-49,-48,-50,77,None,None,None,None,77,77,77,77,-43,-65,]),'LE':([19,24,29,30,32,39,44,45,49,52,87,93,94,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,127,130,134,135,],[-44,-42,-40,-45,-41,63,-45,63,63,63,63,-66,-46,63,63,-58,None,-51,63,None,-57,-47,-49,-48,-50,63,None,None,None,None,63,63,63,63,-43,-65,]),'%':([19,24,29,30,32,39,44,45,49,52,87,93,94,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,127,130,134,135,],[-44,-42,-40,-45,-41,64,-45,64,64,64,64,-66,-46,64,64,64,64,-51,64,64,64,64,-49,64,-50,64,64,64,64,64,64,64,64,64,-43,-65,]),'&':([19,24,29,30,32,39,44,45,49,52,87,93,94,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,127,130,134,135,],[-44,-42,-40,-45,-41,65,-45,65,65,65,65,-66,-46,65,65,-58,-63,-51,-53,-62,-57,-47,-49,-48,-50,65,-59,-61,-64,-60,65,65,65,65,-43,-65,]),')':([19,24,29,32,44,49,51,52,54,82,85,86,87,91,92,93,94,96,97,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,130,134,135,140,146,],[-44,-42,-40,-41,-45,-70,93,94,-68,-77,128,129,-39,131,132,-66,-46,-67,134,135,-55,-58,-63,-51,-53,-62,-57,-47,-49,-48,-50,-56,-59,-61,-64,-60,-52,-54,-76,139,-79,-69,-43,-65,-80,-78,]),'(':([0,2,4,5,6,7,9,10,12,13,14,15,16,17,18,20,21,22,23,25,26,28,30,31,33,34,36,38,42,43,44,46,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,88,89,90,95,99,128,129,131,132,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-74,20,-2,-5,-73,20,-16,46,20,50,-18,-19,20,-21,-17,20,-15,-14,-22,54,20,-20,-12,-13,-3,82,82,54,20,20,20,20,20,20,-11,-37,-36,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-23,20,20,20,-4,20,-35,-24,20,-25,20,-26,20,20,20,20,-27,-38,-28,-30,-32,-33,-34,-75,20,20,-29,-31,]),'+':([19,24,29,30,32,39,44,45,49,52,87,93,94,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,127,130,134,135,],[-44,-42,-40,-45,-41,68,-45,68,68,68,68,-66,-46,68,68,68,68,-51,68,68,68,-47,-49,-48,-50,68,68,68,68,68,68,68,68,68,-43,-65,]),'*':([19,24,29,30,32,39,44,45,49,52,87,93,94,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,127,130,134,135,],[-44,-42,-40,-45,-41,69,-45,69,69,69,69,-66,-46,69,69,69,69,-51,69,69,69,69,-49,69,-50,69,69,69,69,69,69,69,69,69,-43,-65,]),'-':([19,24,29,30,32,39,44,45,49,52,87,93,94,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,127,130,134,135,],[-44,-42,-40,-45,-41,70,-45,70,70,70,70,-66,-46,70,70,70,70,-51,70,70,70,-47,-49,-48,-50,70,70,70,70,70,70,70,70,70,-43,-65,]),',':([19,24,29,32,40,41,44,47,49,93,94,96,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,127,130,134,135,140,146,],[-44,-42,-40,-41,-7,81,-45,89,-70,-66,-46,89,-55,-58,-63,-51,-53,-62,-57,-47,-49,-48,-50,-56,-59,-61,-64,-60,-52,-54,-6,138,-79,-8,-69,-43,-65,-80,-78,]),'/':([19,24,29,30,32,39,44,45,49,52,87,93,94,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,127,130,134,135,],[-44,-42,-40,-45,-41,71,-45,71,71,71,71,-66,-46,71,71,71,71,-51,71,71,71,71,-49,71,-50,71,71,71,71,71,71,71,71,71,-43,-65,]),'ID':([0,2,4,5,6,7,8,9,10,11,12,13,15,17,18,20,21,22,23,25,26,28,31,33,34,36,38,46,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,88,89,90,95,99,102,126,128,129,131,132,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-74,30,-2,42,-5,-73,43,44,-16,44,-18,-19,44,-21,-17,30,-15,-14,-22,30,-20,-12,-13,-3,44,44,30,44,30,44,-11,-37,-36,30,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-23,44,44,44,-4,122,44,-35,-24,44,-25,44,-26,122,140,30,30,30,30,-27,-38,-28,-30,-32,-33,-34,-75,30,30,-29,-31,]),'INTEGER':([0,2,4,5,6,7,9,10,12,13,15,17,18,20,21,22,23,25,26,28,31,33,34,36,38,46,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,88,89,90,95,99,128,129,131,132,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-74,29,-2,-5,-73,29,-16,29,-18,-19,29,-21,-17,29,-15,-14,-22,29,-20,-12,-13,-3,29,29,29,29,29,29,-11,-37,-36,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-23,29,29,29,-4,29,-35,-24,29,-25,29,-26,29,29,29,29,-27,-38,-28,-30,-32,-33,-34,-75,29,29,-29,-31,]),';':([3,19,24,29,30,32,35,37,39,40,41,44,45,47,48,49,87,93,94,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,130,133,134,135,],[9,-44,-42,-40,-45,-41,58,59,76,-7,80,-45,84,88,90,-70,-39,-66,-46,136,-55,-58,-63,-51,-53,-62,-57,-47,-49,-48,-50,-56,-59,-61,-64,-60,-52,-54,-6,-8,-69,145,-43,-65,]),'^':([19,24,29,30,32,39,44,45,49,52,87,93,94,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,127,130,134,135,],[-44,-42,-40,-45,-41,79,-45,79,79,79,79,-66,-46,79,79,-58,-63,-51,-53,-62,-57,-47,-49,-48,-50,79,-59,-61,-64,-60,79,-54,79,79,-43,-65,]),'=':([30,42,122,],[56,83,83,]),'<':([19,24,29,30,32,39,44,45,49,52,87,93,94,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,127,130,134,135,],[-44,-42,-40,-45,-41,66,-45,66,66,66,66,-66,-46,66,66,-58,None,-51,66,None,-57,-47,-49,-48,-50,66,None,None,None,None,66,66,66,66,-43,-65,]),'$end':([0,1,2,4,5,6,7,9,10,13,17,18,21,22,25,26,27,28,31,33,34,36,57,58,59,76,80,84,88,90,99,136,137,141,142,143,144,145,147,150,151,],[-3,0,-72,-71,-74,-10,-2,-5,-73,-16,-18,-19,-21,-17,-15,-14,-1,-22,-9,-20,-12,-13,-11,-37,-36,-23,-4,-35,-24,-25,-26,-27,-38,-28,-30,-32,-33,-34,-75,-29,-31,]),'SHR':([19,24,29,30,32,39,44,45,49,52,87,93,94,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,127,130,134,135,],[-44,-42,-40,-45,-41,62,-45,62,62,62,62,-66,-46,62,62,-58,62,-51,62,62,-57,-47,-49,-48,-50,62,62,62,62,62,62,62,62,62,-43,-65,]),'REPEAT':([0,2,4,5,6,7,9,10,13,17,18,21,22,23,25,26,28,31,33,34,36,38,53,55,57,58,59,60,76,80,84,88,90,99,128,129,131,132,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-74,23,-2,-5,-73,-16,-18,-19,-21,-17,23,-15,-14,-22,23,-20,-12,-13,-3,23,23,-11,-37,-36,23,-23,-4,-35,-24,-25,-26,23,23,23,23,-27,-38,-28,-30,-32,-33,-34,-75,23,23,-29,-31,]),'STRING':([0,2,4,5,6,7,9,10,12,13,15,17,18,20,21,22,23,25,26,28,31,33,34,36,38,46,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,88,89,90,95,99,128,129,131,132,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-74,24,-2,-5,-73,24,-16,24,-18,-19,24,-21,-17,24,-15,-14,-22,24,-20,-12,-13,-3,24,24,24,24,24,24,-11,-37,-36,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-23,24,24,24,-4,24,-35,-24,24,-25,24,-26,24,24,24,24,-27,-38,-28,-30,-32,-33,-34,-75,24,24,-29,-31,]),'ELSE':([13,17,18,21,22,25,26,28,33,36,58,59,76,84,88,90,99,136,137,141,142,143,144,145,150,151,],[-16,-18,-19,-21,-17,-15,-14,-22,-20,-13,-37,-36,-23,-35,-24,-25,-26,-27,-38,148,149,-32,-33,-34,-29,-31,]),'GE':([19,24,29,30,32,39,44,45,49,52,87,93,94,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,127,130,134,135,],[-44,-42,-40,-45,-41,75,-45,75,75,75,75,-66,-46,75,75,-58,None,-51,75,None,-57,-47,-49,-48,-50,75,None,None,None,None,75,75,75,75,-43,-65,]),'EQ':([19,24,29,30,32,39,44,45,49,52,87,93,94,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,127,130,134,135,],[-44,-42,-40,-45,-41,73,-45,73,73,73,73,-66,-46,73,73,-58,None,-51,73,None,-57,-47,-49,-48,-50,73,None,None,None,None,73,73,73,73,-43,-65,]),'UNTIL':([13,17,18,21,22,25,26,28,33,34,36,53,57,58,59,76,84,88,90,99,136,137,141,142,143,144,145,150,151,],[-16,-18,-19,-21,-17,-15,-14,-22,-20,-12,-13,95,-11,-37,-36,-23,-35,-24,-25,-26,-27,-38,-28,-30,-32,-33,-34,-29,-31,]),'IF':([0,2,4,5,6,7,9,10,13,17,18,21,22,23,25,26,28,31,33,34,36,38,53,55,57,58,59,60,76,80,84,88,90,99,128,129,131,132,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-74,14,-2,-5,-73,-16,-18,-19,-21,-17,14,-15,-14,-22,14,-20,-12,-13,-3,14,14,-11,-37,-36,14,-23,-4,-35,-24,-25,-26,14,14,14,14,-27,-38,-28,-30,-32,-33,-34,-75,14,14,-29,-31,]),'AND':([19,24,29,30,32,39,44,45,49,52,87,93,94,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,127,130,134,135,],[-44,-42,-40,-45,-41,61,-45,61,61,61,61,-66,-46,61,-55,-58,-63,-51,-53,-62,-57,-47,-49,-48,-50,61,-59,-61,-64,-60,-52,-54,61,61,-43,-65,]),':':([30,],[55,]),'SHL':([19,24,29,30,32,39,44,45,49,52,87,93,94,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,127,130,134,135,],[-44,-42,-40,-45,-41,67,-45,67,67,67,67,-66,-46,67,67,-58,67,-51,67,67,-57,-47,-49,-48,-50,67,67,67,67,67,67,67,67,67,-43,-65,]),'TYPE':([0,2,4,5,7,9,10,38,60,80,82,137,138,147,],[-3,8,11,-74,-2,-5,-73,-3,102,-4,126,-38,126,-75,]),'FLOAT':([0,2,4,5,6,7,9,10,12,13,15,17,18,20,21,22,23,25,26,28,31,33,34,36,38,46,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,88,89,90,95,99,128,129,131,132,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-74,32,-2,-5,-73,32,-16,32,-18,-19,32,-21,-17,32,-15,-14,-22,32,-20,-12,-13,-3,32,32,32,32,32,32,-11,-37,-36,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-23,32,32,32,-4,32,-35,-24,32,-25,32,-26,32,32,32,32,-27,-38,-28,-30,-32,-33,-34,-75,32,32,-29,-31,]),'|':([19,24,29,30,32,39,44,45,49,52,87,93,94,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,127,130,134,135,],[-44,-42,-40,-45,-41,78,-45,78,78,78,78,-66,-46,78,78,-58,-63,-51,-53,-62,-57,-47,-49,-48,-50,78,-59,-61,-64,-60,-52,-54,78,78,-43,-65,]),'BREAK':([0,2,4,5,6,7,9,10,13,17,18,21,22,23,25,26,28,31,33,34,36,38,53,55,57,58,59,60,76,80,84,88,90,99,128,129,131,132,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-74,35,-2,-5,-73,-16,-18,-19,-21,-17,35,-15,-14,-22,35,-20,-12,-13,-3,35,35,-11,-37,-36,35,-23,-4,-35,-24,-25,-26,35,35,35,35,-27,-38,-28,-30,-32,-33,-34,-75,35,35,-29,-31,]),'CONTINUE':([0,2,4,5,6,7,9,10,13,17,18,21,22,23,25,26,28,31,33,34,36,38,53,55,57,58,59,60,76,80,84,88,90,99,128,129,131,132,136,137,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-74,37,-2,-5,-73,-16,-18,-19,-21,-17,37,-15,-14,-22,37,-20,-12,-13,-3,37,37,-11,-37,-36,37,-23,-4,-35,-24,-25,-26,37,37,37,37,-27,-38,-28,-30,-32,-33,-34,-75,37,37,-29,-31,]),'error':([0,2,7,9,15,20,38,46,50,54,60,80,],[-3,3,-2,-5,48,51,-3,86,92,98,3,-4,]),'{':([0,2,4,5,6,7,9,10,13,17,18,21,22,23,25,26,28,31,33,34,36,38,53,55,57,58,59,60,76,80,84,88,90,99,128,129,131,132,136,137,139,141,142,143,144,145,147,148,149,150,151,],[-3,-72,-71,-74,38,-2,-5,-73,-16,-18,-19,-21,-17,38,-15,-14,-22,38,-20,-12,-13,-3,38,38,-11,-37,-36,38,-23,-4,-35,-24,-25,-26,38,38,38,38,-27,-38,38,-28,-30,-32,-33,-34,-75,38,38,-29,-31,]),'>':([19,24,29,30,32,39,44,45,49,52,87,93,94,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,127,130,134,135,],[-44,-42,-40,-45,-41,74,-45,74,74,74,74,-66,-46,74,74,-58,None,-51,74,None,-57,-47,-49,-48,-50,74,None,None,None,None,74,74,74,74,-43,-65,]),'}':([7,9,13,17,18,21,22,25,26,28,31,33,34,36,38,57,58,59,60,76,80,84,88,90,99,101,136,137,141,142,143,144,145,150,151,],[-2,-5,-16,-18,-19,-21,-17,-15,-14,-22,-9,-20,-12,-13,-3,-11,-37,-36,-10,-23,-4,-35,-24,-25,-26,137,-27,-38,-28,-30,-32,-33,-34,-29,-31,]),'OR':([19,24,29,30,32,39,44,45,49,52,87,93,94,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,127,130,134,135,],[-44,-42,-40,-45,-41,72,-45,72,72,72,72,-66,-46,72,-55,-58,-63,-51,-53,-62,-57,-47,-49,-48,-50,-56,-59,-61,-64,-60,-52,-54,72,72,-43,-65,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declarations':([0,38,],[2,60,]),'expr_list':([15,54,],[47,96,]),'choice_instr':([6,23,31,53,55,60,128,129,131,132,148,149,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'arg':([82,138,],[125,146,]),'repeat_instr':([6,23,31,53,55,60,128,129,131,132,148,149,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'return_instr':([6,23,31,53,55,60,128,129,131,132,148,149,],[18,18,18,18,18,18,18,18,18,18,18,18,]),'const':([6,12,15,20,23,31,46,50,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,83,89,95,128,129,131,132,148,149,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'continue_instr':([6,23,31,53,55,60,128,129,131,132,148,149,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'while_instr':([6,23,31,53,55,60,128,129,131,132,148,149,],[22,22,22,22,22,22,22,22,22,22,22,22,]),'init':([8,81,102,],[40,121,40,]),'program':([0,],[1,]),'args_list_or_empty':([82,],[124,]),'assignment':([6,23,31,53,55,60,128,129,131,132,148,149,],[25,25,25,25,25,25,25,25,25,25,25,25,]),'fundefs':([2,],[4,]),'labeled_instr':([6,23,31,53,55,60,128,129,131,132,148,149,],[26,26,26,26,26,26,26,26,26,26,26,26,]),'instructions_opt':([6,60,],[27,101,]),'compound_instr':([6,23,31,53,55,60,128,129,131,132,139,148,149,],[28,28,28,28,28,28,28,28,28,28,147,28,28,]),'inits':([8,102,],[41,41,]),'declaration':([2,60,],[7,7,]),'args_list':([82,],[123,]),'condition':([46,50,95,],[85,91,133,]),'instructions':([6,23,60,],[31,53,31,]),'expr_list_or_empty':([54,],[97,]),'break_instr':([6,23,31,53,55,60,128,129,131,132,148,149,],[33,33,33,33,33,33,33,33,33,33,33,33,]),'instruction':([6,23,31,53,55,60,128,129,131,132,148,149,],[34,34,57,57,99,34,141,142,143,144,150,151,]),'fundefs_opt':([2,],[6,]),'fundef':([2,4,],[5,10,]),'print_instr':([6,23,31,53,55,60,128,129,131,132,148,149,],[36,36,36,36,36,36,36,36,36,36,36,36,]),'expression':([6,12,15,20,23,31,46,50,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,83,89,95,128,129,131,132,148,149,],[39,45,49,52,39,39,87,87,39,49,39,100,39,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,127,130,87,39,39,39,39,39,39,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declarations fundefs_opt instructions_opt','program',3,'p_program','Cparser.py',43),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',50),
  ('declarations -> <empty>','declarations',0,'p_no_declarations','Cparser.py',54),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',63),
  ('declaration -> error ;','declaration',2,'p_error_declaration','Cparser.py',67),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',75),
  ('inits -> init','inits',1,'p_single_init','Cparser.py',79),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',86),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','Cparser.py',93),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_empty_instructions_opt','Cparser.py',97),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',105),
  ('instructions -> instruction','instructions',1,'p_sinle_instruction','Cparser.py',109),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',115),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',116),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',117),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',118),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',119),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',120),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',121),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',122),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',123),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',124),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',125),
  ('print_instr -> PRINT expr_list ;','print_instr',3,'p_print_instr','Cparser.py',132),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr_err','Cparser.py',136),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',143),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',148),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',155),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr_with_else','Cparser.py',159),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_error_choice_instr','Cparser.py',163),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_error_choice_instr','Cparser.py',164),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',173),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_error_while_instr','Cparser.py',177),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',184),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',188),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',192),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',196),
  ('compound_instr -> { declarations instructions_opt }','compound_instr',4,'p_compound_instr','Cparser.py',201),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',206),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',211),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',212),
  ('const -> STRING','const',1,'p_const','Cparser.py',213),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',225),
  ('expression -> const','expression',1,'p_expression_const','Cparser.py',229),
  ('expression -> ID','expression',1,'p_expression_const','Cparser.py',230),
  ('expression -> ( expression )','expression',3,'p_expression_with_par','Cparser.py',234),
  ('expression -> expression + expression','expression',3,'p_expression_two_exprs','Cparser.py',238),
  ('expression -> expression - expression','expression',3,'p_expression_two_exprs','Cparser.py',239),
  ('expression -> expression * expression','expression',3,'p_expression_two_exprs','Cparser.py',240),
  ('expression -> expression / expression','expression',3,'p_expression_two_exprs','Cparser.py',241),
  ('expression -> expression % expression','expression',3,'p_expression_two_exprs','Cparser.py',242),
  ('expression -> expression | expression','expression',3,'p_expression_two_exprs','Cparser.py',243),
  ('expression -> expression & expression','expression',3,'p_expression_two_exprs','Cparser.py',244),
  ('expression -> expression ^ expression','expression',3,'p_expression_two_exprs','Cparser.py',245),
  ('expression -> expression AND expression','expression',3,'p_expression_two_exprs','Cparser.py',246),
  ('expression -> expression OR expression','expression',3,'p_expression_two_exprs','Cparser.py',247),
  ('expression -> expression SHL expression','expression',3,'p_expression_two_exprs','Cparser.py',248),
  ('expression -> expression SHR expression','expression',3,'p_expression_two_exprs','Cparser.py',249),
  ('expression -> expression EQ expression','expression',3,'p_expression_two_exprs','Cparser.py',250),
  ('expression -> expression NEQ expression','expression',3,'p_expression_two_exprs','Cparser.py',251),
  ('expression -> expression > expression','expression',3,'p_expression_two_exprs','Cparser.py',252),
  ('expression -> expression < expression','expression',3,'p_expression_two_exprs','Cparser.py',253),
  ('expression -> expression LE expression','expression',3,'p_expression_two_exprs','Cparser.py',254),
  ('expression -> expression GE expression','expression',3,'p_expression_two_exprs','Cparser.py',255),
  ('expression -> ID ( error )','expression',4,'p_expression_err','Cparser.py',259),
  ('expression -> ( error )','expression',3,'p_expression_err','Cparser.py',260),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',269),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_empty_expr_list','Cparser.py',273),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',282),
  ('expr_list -> expression','expr_list',1,'p_single_expr','Cparser.py',286),
  ('fundefs_opt -> fundefs','fundefs_opt',1,'p_fundefs_opt','Cparser.py',295),
  ('fundefs_opt -> <empty>','fundefs_opt',0,'p_empty_fundefs_opt','Cparser.py',299),
  ('fundefs -> fundefs fundef','fundefs',2,'p_fundefs','Cparser.py',308),
  ('fundefs -> fundef','fundefs',1,'p_single_fundef','Cparser.py',312),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',318),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',325),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_empty_args_list','Cparser.py',329),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',338),
  ('args_list -> arg','args_list',1,'p_single_arg_list','Cparser.py',342),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',348),
]
